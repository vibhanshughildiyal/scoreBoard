// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	repository "scoreBoard/internal/repository"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Game provides a mock function with given fields:
func (_m *Repository) Game() repository.GameDAO {
	ret := _m.Called()

	var r0 repository.GameDAO
	if rf, ok := ret.Get(0).(func() repository.GameDAO); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.GameDAO)
		}
	}

	return r0
}

// Player provides a mock function with given fields:
func (_m *Repository) Player() repository.PlayerDAO {
	ret := _m.Called()

	var r0 repository.PlayerDAO
	if rf, ok := ret.Get(0).(func() repository.PlayerDAO); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.PlayerDAO)
		}
	}

	return r0
}

// Score provides a mock function with given fields:
func (_m *Repository) Score() repository.ScoreDAO {
	ret := _m.Called()

	var r0 repository.ScoreDAO
	if rf, ok := ret.Get(0).(func() repository.ScoreDAO); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.ScoreDAO)
		}
	}

	return r0
}

// ScoreBoard provides a mock function with given fields:
func (_m *Repository) ScoreBoard() repository.ScoreBoardDAO {
	ret := _m.Called()

	var r0 repository.ScoreBoardDAO
	if rf, ok := ret.Get(0).(func() repository.ScoreBoardDAO); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.ScoreBoardDAO)
		}
	}

	return r0
}
